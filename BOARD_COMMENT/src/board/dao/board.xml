<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatid-3-config.dtd">
<mapper namespace="board.dao.board">
	<reslutMap id="BoardResult" type="board.model.BoardVO">
		<result property="num" column="NUM" jdbcType="BIGINT"/>
		<result property="writer" column="WRITER" jdbcType="VARCHAR"/>
		<result property="email" column="EMAIL" jdbcType="VARCHAR"/>
		<result property="subject" column="SUBJECT" jdbcType="VARCHAR"/>
		<result property="pass" column="PASS" jdbcType="VARCHAR"/>		
		<result property="readcount" column="READCOUNT" jdbcType="BIGINT"/>
		<result property="regdate" column="REGDATE" jdbcType="TIMESTAMP"/>
		<result property="content" column="CONTENT" jdbcType="VARCHAR"/>		
	</reslutMap>
	
	<!-- 전체 글 수 : 검색(All) -->
	<select id="getAllCount" parameterType="java.util.Map" resultType="Integer">
		select count(*) from BOARDC
		where writer = #{search_text} or 
		               subject like '%'||#{search_text}||'%' or
		               content like '%'||#{search_text}||'%'
	</select>
	
	<!-- 전체 글수 : 검색(writer) -->
	<select id="getWriterCount" parameterType="java.util.Map" resultType="Integer">
		select count(*) from BOARDC	where writer = #{search_text}
	</select>
	
	<!-- 전체 글수 : 검색(subject) -->
	<select id="getSubjectCount" parameterType="java.util.Map" resultType="Integer">
		select count(*) from BOARDC where subject like '%'||#{search_text}||'%'
	</select>
	
	<!-- 전체 글수 : 검색(content) -->
	<select id="getContentCount" parameterType="java.util.Map" resultType="Integer">
		select count(*) from BOARDC where content like '%'||#{search_text}||'%'
	</select>
	
	<!-- List(목록보기) : 전체 -->
	<select id="getList" parameterType="java.util.Map" resultMap="BoardResult">
		<![CDATA[
		         select * 
		           from (select rownum rnum, num, writer, pass, email, subject, content, regdate, readcount
		                   from (select * from BOARDC order by num desc))
		          where rnum >= #{starRow} and rnum <= #{endRow}
		]]>
	</select>
	
	<!-- List(목록보기) : 검색(All) -->
	<select id="getAllList" parameterType="java.util.Map" resultMap="BoardResult">
		<![CDATA[
		         select * 
		           from (select rownum rnum, num, writer, pass, email, subject, content, regdate, readcount
		                   from (select * from BOARDC 
		                                 where writer = #{search_text} or 
		                                                subject like '%'||#{search_text}||'%' or
		                                                content like '%'||#{search_text}||'%'
		                                                order by num desc
		                        )
		                 )
		          where rnum >= #{starRow} and rnum <= #{endRow}
		]]>
	</select>
	
	<!-- List(목록보기) : 검색(writer) -->
	<select id="getWriterList" parameterType="java.util.Map" resultMap="BoardResult">
		<![CDATA[
		         select * 
		           from (select rownum rnum, num, writer, pass, email, subject, content, regdate, readcount
		                   from (select * from BOARDC 
		                                 where writer = #{search_text} or
		                                 order by num desc
		                        )
		                 )
		          where rnum >= #{starRow} and rnum <= #{endRow}
		]]>
	</select>
	
	<!-- List(목록보기) : 검색(subject) -->
	<select id="getSubjectList" parameterType="java.util.Map" resultMap="BoardResult">
		<![CDATA[
		         select * 
		           from (select rownum rnum, num, writer, pass, email, subject, content, regdate, readcount
		                   from (select * from BOARDC 
		                                 where subject like '%'||#{search_text}||'%'
		                                 order by num desc
		                        )
		                 )
		          where rnum >= #{starRow} and rnum <= #{endRow}
		]]>
	</select>
	
	<!-- List(목록보기) : 검색(content) -->
	<select id="getContentList" parameterType="java.util.Map" resultMap="BoardResult">
		<![CDATA[
		         select * 
		           from (select rownum rnum, num, writer, pass, email, subject, content, regdate, readcount
		                   from (select * from BOARDC 
		                                 where content like '%'||#{search_text}||'%'
		                                 order by num desc
		                        )
		                 )
		          where rnum >= #{starRow} and rnum <= #{endRow}
		]]>
	</select>
	
	<!-- 글쓰기 -->
	<insert id="insertArticle" parameterType="board.model.BoardVO">
		<![CDATA[
		         insert into BOARDC(num, writer, pass, email, subject, content, regdate) 
		         values(BOARDC_seq.nextval, #{writer}, #{pass}, #{email}, #{subject}, #{content}, #{regdate})
		]]>
	</insert>
	
	<!-- 글보기 -->
	<update id="upReadcount" parameterType="java.lang.Integer">
		<![CDATA[
		         update BOARDC set readcount = readcount + 1 
		          where num = #{num}
		]]>
	</update>
	
	<select id="getArticle" parameterType="java.lang.Integer" resultMap="BoardResult"
		<![CDATA[
		         select * from BOARDC where num = #{num}
		]]>
	</select>
	
	<!-- 비밀번호 가져오기 -->
	<select id="getPass" parameterType="java.lang.Integer" resultMap="String"
		<![CDATA[
		         select pass from BOARDC where num = #{num}
		]]>
	</select>
	
	<!-- 글수정 -->
	<update id="updateArticle" parameterType="board.model.BoardVO">
		<![CDATA[
		         update BOARDC set writer = #{writer}
		                           ,email = #{email}
		                           ,subject = #{subject}
		                           ,content = #{content}
		          where num = #{num}
		]]>
	</select>
	
	<!-- 글삭제 -->
	<select id="deleteArticle" parameterType="java.lang.Integer">
		<![CDATA[
		         delete from BOARDC where num = #{num}
		]]>
	</select>
	
</mapper>